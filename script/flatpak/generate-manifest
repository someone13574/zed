#!/bin/bash
cd "$(dirname "$0")"

if [[ $1 ]]; then
    channel=$1
else
    echo "Please supply the target channel."
    echo "Possible values: ['dev', 'nightly', 'preview', 'stable']"
    exit
fi

if [[ $2 ]]; then
    method=$2
else
    echo "Please supply packaging method. See 'docs/src/development/linux.md' for details."
    echo "Possible values: ['build', 'copy']."
    exit
fi

if [[ "$channel" == "dev" ]]; then
    app_id="dev.zed.Zed-Dev"
    app_name="Zed Devel"
    icon_name="app-icon-dev.png"
elif [[ "$channel" == "nightly" ]]; then
    app_id="dev.zed.Zed-Nightly"
    app_name="Zed Nightly"
    icon_name="app-icon-nightly.png"
elif [[ "$channel" == "preview" ]]; then
    app_id="dev.zed.Zed-Preview"
    app_name="Zed Preview"
    icon_name="app-icon-preview.png"
elif [[ "$channel" == "stable" ]]; then
    app_id="dev.zed.Zed"
    app_name="Zed"
    icon_name="app-icon.png"
else
    echo "Invalid channel '$channel'"
    echo "Possible values: ['dev', 'nightly', 'preview', 'stable']"
    exit
fi

indent="                "
if [[ "$method" == "build" ]]; then
    app_bin_cmd="\"cargo --offline fetch --manifest-path Cargo.toml\",\n${indent}\"cargo --offline build --release\",\n${indent}\"install -Dm755 ./target/release/Zed /app/bin/zed-app\""
    cli_bin_cmd="\"cargo --offline fetch --manifest-path Cargo.toml\",\n${indent}\"cargo --offline build --release --package cli\",\n${indent}\"install -Dm755 ./target/release/cli /app/bin/zed\","
    extra_srcs=",\n${indent}\"crates/zed/resources/flatpak/flatpak-cargo-sources.json\""
elif [[ "$method" == "copy" ]]; then
    echo "Note: When using copy mode the 'crates/zed/RELEASE_CHANNEL' used to compile to 'target' should be '${channel}' for app-icons to work"

    app_bin_cmd="\"install -Dm755 ./target/release/Zed /app/bin/zed-app\""
    cli_bin_cmd="\"install -Dm755 ./target/release/cli /app/bin/zed\","
    extra_srcs=""
else
    echo "Invalid packaging method '$method'. See 'docs/src/development/linux.md' for details."
    echo "Possible values: ['build', 'copy']."
    exit
fi

manifest_path="../../${app_id}.json"
cp "../../crates/zed/resources/flatpak/manifest-template.json" "${manifest_path}"

sed -i "s|@app_id@|$app_id|g" "${manifest_path}"
sed -i "s|@app_name@|$app_name|g" "${manifest_path}"
sed -i "s|@channel@|$channel|g" "${manifest_path}"
sed -i "s|@icon_name@|$icon_name|g" "${manifest_path}"

sed -i "s|@app_bin_cmd@|$app_bin_cmd|g" "${manifest_path}"
sed -i "s|@cli_bin_cmd@|$cli_bin_cmd|g" "${manifest_path}"
sed -i "s|@extra_srcs@|$extra_srcs|g" "${manifest_path}"